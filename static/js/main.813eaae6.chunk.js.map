{"version":3,"sources":["logo.svg","utils/helper.js","consts.js","components/toast.js","screens/login.js","components/header.js","screens/signUp.js","App.js","reportWebVitals.js","index.js"],"names":["postCall","url","payload","fetch","method","headers","body","JSON","stringify","then","res","console","log","Toast","showToast","msg","useEffect","toast","notify","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","Login","useState","username","setusername","password","setpassword","loading","setloading","setshowToast","error","setError","history","useHistory","location","state","handle_loginClick","event","a","preventDefault","ok","json","concat","message","id","onSubmit","htmlFor","type","className","value","onChange","target","map","index","to","style","float","Header","src","height","SignUp","handle_signupClick","setTimeout","push","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.813eaae6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { api } from \"../consts\";\n\nconst postCall = (url, payload) => {\n  return fetch(`${api}/${url}`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(payload),\n  }).then((res) => {\n    console.log(res);\n    return res;\n  });\n};\n\nexport default postCall;\n","export const api = \"https://fechallenge.dev.bhyve.io\";\nexport const signup_endpoint = \"/user/signup\";\nexport const login_endpoint = \"/user/signin\";\n","import { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useEffect } from \"react\";\n\nconst notify = (msg) => toast(msg);\n\nconst Toast = ({ showToast, msg }) => {\n  useEffect(() => {\n    if (showToast) {\n      notify(msg);\n    }\n  }, [showToast]);\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={4000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n    />\n  );\n};\n\nexport default Toast;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport postCall from \"../utils/helper\";\nimport { login_endpoint } from \"../consts\";\nimport Toast from \"../components/toast\";\n\nconst Login = () => {\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"Password1\");\n\n  const [loading, setloading] = useState(false);\n  const [showToast, setshowToast] = useState(false);\n  const [error, setError] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    history.location.state && setusername(history.location.state.username);\n  }, [history.location.state]);\n\n  const handle_loginClick = async (event) => {\n    event.preventDefault(); // to stop page from reloading\n    setloading(true);\n    setError([]);\n\n    let payload = {\n      username,\n      password,\n    };\n    let res = await postCall(login_endpoint, payload);\n    if (res.ok) {\n      setloading(false);\n      setshowToast(true);\n    } else {\n      setloading(false);\n      res.json().then((error) => setError([].concat(error.message)));\n    }\n  };\n\n  return (\n    <div id=\"login_container\">\n      {loading && <p>Loading .....</p>}\n      <Toast showToast={showToast} msg=\"Successfully Loged in to Bhyve!\" />\n      <form onSubmit={handle_loginClick}>\n        <div>\n          <label htmlFor=\"username\">Email Address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"username\"\n            value={username}\n            onChange={(event) => setusername(event.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => setpassword(event.target.value)}\n          />\n          {error.map((message, index) => (\n            <p className=\"error_message\" key={index}>\n              {message}\n            </p>\n          ))}\n        </div>\n        <Link to=\"/signup\" style={{ float: \"right\" }}>\n          Not a user? Signup\n        </Link>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary mt-4 w-100 text-center\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","const Header = () => {\n  return (\n    <div className=\"text-center py-4\">\n      <img\n        src=\"https://bhyve.io/wp-content/uploads/2019/04/logo-b.png\"\n        height=\"48\"\n      />\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport postCall from \"../utils/helper\";\nimport { signup_endpoint } from \"../consts\";\nimport Toast from \"../components/toast\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const [username, setusername] = useState(\"testemail@gmail.com\");\n  const [password, setpassword] = useState(\"Password1\");\n\n  const [loading, setloading] = useState(false);\n  const [showToast, setshowToast] = useState(false);\n  const [error, setError] = useState([]);\n  const history = useHistory();\n\n  const handle_signupClick = async (event) => {\n    event.preventDefault(); // to stop page from reloading\n    setloading(true);\n    setError([]);\n\n    let payload = {\n      username,\n      password,\n    };\n    let res = await postCall(signup_endpoint, payload);\n    if (res.ok) {\n      setloading(false);\n      setshowToast(true);\n      setTimeout(() => {\n        history.push(`/login`, { username });\n      }, 4000);\n    } else {\n      setloading(false);\n      res.json().then((error) => setError([].concat(error.message)));\n    }\n  };\n\n  return (\n    <div id=\"login_container\">\n      {loading && <p>Loading .....</p>}\n      <Toast\n        showToast={showToast}\n        msg=\"Successfully signed up to Bhyve! Lets login\"\n      />\n      <form onSubmit={handle_signupClick}>\n        <div>\n          <label htmlFor=\"username\">Email Address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"username\"\n            value={username}\n            onChange={(event) => setusername(event.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => setpassword(event.target.value)}\n          />\n          {error.map((message, index) => (\n            <p className=\"error_message\" key={index}>\n              {message}\n            </p>\n          ))}\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary mt-4 w-100 text-center\"\n        >\n          SignUp\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import logo from \"./logo.svg\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./screens/login\";\nimport Header from \"./components/header\";\nimport SignUp from \"./screens/signUp\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}